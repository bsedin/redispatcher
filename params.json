{"name":"Redispatcher","tagline":"http://kressh.github.io/redispatcher","body":"![Redispatcher](https://zhf.io/p8IRct/raw)\r\n\r\n[![Gem Version](https://badge.fury.io/rb/redispatcher.svg)](http://badge.fury.io/rb/redispatcher)\r\n[![Code Climate](https://codeclimate.com/github/rambler-digital-solutions/redispatcher/badges/gpa.svg)](https://codeclimate.com/github/rambler-digital-solutions/redispatcher)\r\n[![Test Coverage](https://codeclimate.com/github/rambler-digital-solutions/redispatcher/badges/coverage.svg)](https://codeclimate.com/github/rambler-digital-solutions/redispatcher)\r\n[![Build Status](https://travis-ci.org/rambler-digital-solutions/redispatcher.svg?branch=master)](https://travis-ci.org/rambler-digital-solutions/redispatcher)\r\n\r\nThis gem provides delivery of objects from database to any structure with power of callbacks.\r\n\r\nSupporting ORM are ActiveRecord and Sequel (through [sequel-rails](https://github.com/TalentBox/sequel-rails) gem)\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'redispatcher'\r\n```\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install redispatcher\r\n\r\n## Using\r\n\r\n### Writing Dispatchers\r\n\r\nDispatchers inherit from `Redispatcher::Dispatcher`, live in your `app/dispatchers` directory, and are named for the model that they dispatch.\r\n\r\nYou can use rails generator to generate dispatcher:\r\n\r\n```\r\nrails g dispatcher Topic\r\n```\r\n\r\nThis will create TopicDispatcher:\r\n\r\n```ruby\r\n# app/dispatchers/topic_dispatcher.rb\r\nclass TopicDispatcher < Redispatcher::Dispatcher\r\n  # ...\r\nend\r\n```\r\n\r\nDo not hesitate to use dispatscher's callbacks `before_initialize`, `after_initialize`, `before_process`, `after_process`, `before_commit`, `after_commit`, `before_rollback`, `after_rollback` just like that:\r\n\r\n```ruby\r\n# app/dispatchers/topic_dispatcher.rb\r\nclass TopicDispatcher < Redispatcher::Dispatcher\r\n\r\n  after_initialize do\r\n    @processed_object = {}\r\n  end\r\n\r\n  before_process do\r\n    @processed_object.merge! title: object.title\r\n  end\r\n\r\n  after_commit :update_mongodb\r\n\r\n  def update_mongodb\r\n    MONGO['topics'].update({ id: object.id }, processed_object, upsert: true)\r\n  end\r\nend\r\n```\r\n\r\n### Enable dispatcher for your model\r\n\r\nWith ActiveRecord:\r\n\r\n```ruby\r\nclass Topic < ActiveRecord::Base\r\n  dispatchable\r\nend\r\n```\r\n\r\nWith Sequel:\r\n\r\n```ruby\r\nclass Topic < Sequel::Model\r\n  dispatchable\r\nend\r\n```\r\n\r\n### Dispatch!\r\n\r\nJust call dispatch method on object you going to dispatch.\r\n\r\n```ruby\r\ndispatched_topic = Topic.first.dispatch\r\n```\r\n\r\n## License\r\n\r\nRedispatcher is licensed under the MIT license. See LICENSE for full license text.\r\n\r\n## Contributing\r\n\r\n1. Fork it ( https://github.com/rambler-digital-solutions/redispatcher/fork )\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create a new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}